type Query {
    article(id: ID!): Article
    articles(page: Pagination): ArticleConnection!
}

type Mutation {
    newArticle(input: ArticleMutationInput!): Article!
    updateArticle(id: ID!, input: ArticleMutationInput!): Article!
}

type Article implements Node {
    id: ID!
    title: String!
    body: String!
    description: String!
    publishStatus: Int!
    thumbnailImage: String!
    postedAt: Time!
    createdAt: Time!
    updatedAt: Time!
}

input ArticleMutationInput {
    title: String!
    body: String!
    description: String!
    publishStatus: Int!
    thumbnailImage: String!
    postedAt: Time!
}

type ArticleEdge implements Edge {
    cursor: String!
    node: Article!
}

type ArticleConnection implements Connection {
    pageInfo: PageInfo!
    edges: [ArticleEdge]
    nodes: [Article]    
}
